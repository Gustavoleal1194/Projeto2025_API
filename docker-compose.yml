version: '3.8'

services:
  # Banco de dados SQL Server
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: yeti-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=MinhaSenha123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - yeti-network
    healthcheck:
      test: >
        /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P MinhaSenha123! -Q "SELECT 1" || exit 1
      interval: 5s
      retries: 20
      timeout: 5s
      start_period: 10s

  # Backend API
  backend:
    build: .
    container_name: yeti-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=dbBiblioteca;User Id=sa;Password=MinhaSenha123!;TrustServerCertificate=true;MultipleActiveResultSets=true
      - JwtSettings__SecretKey=MinhaChaveSecretaSuperSeguraParaJWT2025
      - JwtSettings__Issuer=Projeto2025API
      - JwtSettings__Audience=Projeto2025API
      - JwtSettings__ExpirationHours=8
    ports:
      - "5072:80"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - yeti-network

  # Frontend
  frontend:
    build: ./frontend-yeti
    container_name: yeti-frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_started
    networks:
      - yeti-network

volumes:
  sqlserver_data:

networks:
  yeti-network:
    driver: bridge

